using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class VoidMonsterBehavior : MonoBehaviour
{
    public Player player;
    private SpriteRenderer spriteRenderer;

    public float amplitude = 1f;
    public float frequency = 1f;
    public float spawnThreshold = 5f;
    public bool oscillateUp = false;

    private Vector3 initialPosition;
    private float startTime;

    public Sprite currentSprite;
    public Sprite normalSprite;
    public Sprite spookySprite;
    public Sprite spookyierSprite;

    public float threshold1 = 70;
    public float threshold2 = 50;
    public float threshold3 = 40;

    //elastic scaling animation
    public float scaleDuration = 0.33f;
    public float maxElasticAmplitude = 0.15f;
    public float elasticFrequency = 1.5f;
    public float delayBetweenAxes = 0.13f;

    public float distanceToPlayer;


    private void Start()
    {
        startTime = Time.time;

        initialPosition = transform.localPosition;
        
        spriteRenderer = GetComponent<SpriteRenderer>();
        spriteRenderer.sprite = currentSprite;

        if (initialPosition.y > spawnThreshold)
        {
            oscillateUp = true;
        }
    }

    private void Update()
    {

        int direction = oscillateUp ? 1 : -1;

        float yOffset = amplitude * Mathf.Sin(2f * Mathf.PI * frequency * (Time.time - startTime));
        transform.localPosition = initialPosition + new Vector3(0f, yOffset * direction, 0f);

        //distanceToPlayer = Vector3.Distance(player.transform.position, transform.position);

        distanceToPlayer = transform.position.x;

        if (distanceToPlayer > threshold3)
        {
            currentSprite = spookyierSprite;
            CheckSprite();
            //StartCoroutine(AnimatedScaling());
        }

        else if (distanceToPlayer > threshold2)
        {
            currentSprite = spookySprite;
            CheckSprite();
            //StartCoroutine(AnimatedScaling());
        }

        else
        {
            currentSprite = normalSprite;
            CheckSprite();
            //StartCoroutine(AnimatedScaling());
        }
    }

    private void CheckSprite()
    {
        spriteRenderer.sprite = currentSprite;
    }

    private Vector3 CheckScale()
    {
         if (distanceToPlayer > threshold1)
            return new Vector3(0.5f, 0.5f, 0.5f);

        else if (distanceToPlayer > threshold2)
            return new Vector3(0.8f, 0.8f, 0.8f);

        else if (distanceToPlayer > threshold3)
            return new Vector3(1.2f, 1.2f, 1.2f);

        else
            return new Vector3(0.2f, 0.2f, 0.2f);
    }
}
